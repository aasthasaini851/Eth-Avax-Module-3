// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
contract Aastha {
    string public Name = "Aastha";
    string public Symbol = "ABC";
    uint public totalSupply = 0;
    mapping(address=>uint) public BalanceOf;
    function mint(address to,uint256 amount) public {
        totalSupply = totalSupply + amount;
        BalanceOf[to] = BalanceOf[to] + amount;
    }
    function burn(address from,uint amount) public {
    require(BalanceOf[from]>=amount, "Insufficient balance");
    totalSupply = totalSupply - amount;
    BalanceOf[from]= BalanceOf[from] - amount;

    }
    function transfer(address from, address receiver , uint256 amount) public {
        require(BalanceOf[from]>=amount, "Insufficient balance");
        BalanceOf[from] = BalanceOf[from] - amount;
        BalanceOf[receiver] = BalanceOf[receiver] + amount;
        totalSupply = totalSupply - amount;
    }
}
